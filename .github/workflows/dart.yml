name: Dart

on:
  push:
    branches: [main]
  pull_request:
    branches: [ main ]

env:
  flutter_version: "2.0.6"
  java_version: "12.x"

jobs:
  
  config-modules:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Modules list
      id: find
      uses: elvists/find-modules@v1.0
      with:
        working-directory: 'lib'
    outputs:
      modules: ${{ steps.find.outputs.modules }}
     
  test:
    needs: config-modules
    runs-on: ubuntu-latest
    steps:
      - name: sdsd
        run: echo ${{ fromJson(needs.config-modules.outputs.modules) }}
      - name: sdsdsd
        run: echo ${{ needs.config-modules.outputs.modules }}
      - name: test
        run:  for f in "${${{ fromJson(needs.config-modules.outputs.modules) }}[@]}"; do echo $f; done
      - name: test3
        run:  for f in '${${{ fromJson(needs.config-modules.outputs.modules) }}[@]}'; do echo 'sdsda'; done
      - name: test2
        run:  for f in '${${{ needs.config-modules.outputs.modules }}[@]}'; do echo $f; done
      - name: test23
        run:  for f in ${{ needs.config-modules.outputs.modules }}[@]; do echo $f; done

#   setup-and-build:
#     runs-on: ${{ matrix.os }}

#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         include:
#           - os: ubuntu-latest
#             flutter_path: /opt/hostedtoolcache/flutter
#       fail-fast: false

#     steps:
#       # Setup Environment
#       - name: Cache Flutter dependencies
#         uses: actions/cache@v1
#         with:
#           path: ${{ matrix.flutter_path }}
#           key: ${{ runner.os }}-flutter
#       - name: Setup Java
#         uses: actions/setup-java@v1
#         with:
#           java-version: ${{ env.java_version }}
#       - name: Setup Flutter
#         uses: subosito/flutter-action@v1
#         with:
#           flutter-version: ${{ env.flutter_version }}
      
#       # Install Dependencies  
#       - name: Install pub Dependencies     
#         run: flutter pub get
      
#      # Flutter Test
#       - name: Testing project
#         run: flutter test --coverage
        
      - name: get names
        id: modules
        uses: elvists/find-modules@v1.0
        with:
          working-directory: 'lib'
      
      - name: Echo
        run: echo ${{ steps.modules.outputs.modules }}

#       # Flutter Build 
#       - name: Building appbundle
#         if: ${{ matrix.os == 'ubuntu-latest' }}
#         run: flutter build appbundle
#       - name: Building ios 
#         if: ${{ matrix.os == 'macos-latest' }}
#         run: flutter build ios --no-codesign

#       # Upload Artifacts
#       - name: Upload appbundle
#         if: ${{ matrix.os == 'ubuntu-latest' }}
#         uses: actions/upload-artifact@v2
#         with:
#           path: build/app/outputs/bundle/release/app-release.aab
#       - name: Upload app
#         if: ${{ matrix.os == 'macos-latest' }}
#         uses: actions/upload-artifact@v2
#         with:
#           path: build/ios/iphoneos/Runner.app
      - name: Upload lcov
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v2
        with:
          path: coverage/lcov.info
    
#   notify:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: ravsamhq/notify-slack-action@v1
#       if: always()
#       with:
#         status: ${{ job.status }} 
#       env:
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 
  

